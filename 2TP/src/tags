!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AUTOR	structures/hashtable.c	/^} AUTOR;$/;"	t	typeref:struct:item	file:
AUTOR	structures/hashtable.h	/^typedef struct item AUTOR;$/;"	t	typeref:struct:item
Aluno	tp2.y	/^Aluno : nome '(' Notas ')'	  {media = soma\/conta; printf("Nota de %s: %.1f\\n", $1,media); $$ = media;}$/;"	l
Alunos	tp2.y	/^Alunos : Aluno 			      {total = 1; $$ = $1;}$/;"	l
Atribution	gerador.y	/^Atribution :  Variable '=' ExpAdditiv $/;"	l
Atribution	gramatica3.y	/^Atribution :  Variable '=' Exp ;$/;"	l
Body	gerador.y	/^Body : BEGI InstructionsList END$/;"	l
Body	gramatica3.y	/^Body : 'BEGIN' InstructionList 'END';$/;"	l
DECLTYPE	structures/uthash.h	37;"	d
DECLTYPE	structures/uthash.h	40;"	d
DECLTYPE	structures/uthash.h	44;"	d
DECLTYPE	structures/uthash.h	46;"	d
DECLTYPE_ASSIGN	structures/uthash.h	50;"	d
DECLTYPE_ASSIGN	structures/uthash.h	56;"	d
Declaration	gerador.y	/^Declaration : id$/;"	l
Declaration	gramatica3.y	/^Declaration : id$/;"	l
Declarations	gerador.y	/^Declarations : VAR DeclarationsList ';' $/;"	l
Declarations	gramatica3.y	/^Declarations : 'VAR' DeclarationsList  $/;"	l
DeclarationsList	gerador.y	/^DeclarationsList : Declaration $/;"	l
DeclarationsList	gramatica3.y	/^DeclarationsList : Declaration ';'$/;"	l
ELMT_FROM_HH	structures/uthash.h	104;"	d
ExMultipl	gerador.y	/^ExMultipl : Term$/;"	l
ExMultipl	gramatica3.y	/^ExMultipl : Term$/;"	l
Exp	gerador.y	/^Exp : ExpAdditiv             $/;"	l
Exp	gramatica3.y	/^Exp : ExpLogic$/;"	l
ExpAdditiv	gerador.y	/^ExpAdditiv : ExMultipl $/;"	l
ExpAdditiv	gramatica3.y	/^ExpAdditiv : ExMultipl $/;"	l
ExpLogic	gramatica3.y	/^ExpLogic : ExpLogicalAND $/;"	l
ExpLogicalAND	gramatica3.y	/^ExpLogicalAND : ExpLogicalNOT $/;"	l
ExpLogicalNOT	gramatica3.y	/^ExpLogicalNOT : NOT ExpRelational;$/;"	l
ExpLogicalOR	gramatica3.y	/^ExpLogicalOR : ExpRelational$/;"	l
ExpRelational	gramatica3.y	/^ExpRelational : ExpAdditiv$/;"	l
HASH_ADD	structures/uthash.h	172;"	d
HASH_ADD_INT	structures/uthash.h	272;"	d
HASH_ADD_KEYPTR	structures/uthash.h	185;"	d
HASH_ADD_PTR	structures/uthash.h	278;"	d
HASH_ADD_STR	structures/uthash.h	266;"	d
HASH_ADD_TO_BKT	structures/uthash.h	628;"	d
HASH_BER	structures/uthash.h	367;"	d
HASH_BKT_CAPACITY_THRESH	structures/uthash.h	101;"	d
HASH_BLOOM_ADD	structures/uthash.h	139;"	d
HASH_BLOOM_ADD	structures/uthash.h	148;"	d
HASH_BLOOM_BITLEN	structures/uthash.h	120;"	d
HASH_BLOOM_BITSET	structures/uthash.h	136;"	d
HASH_BLOOM_BITTEST	structures/uthash.h	137;"	d
HASH_BLOOM_BYTELEN	structures/uthash.h	121;"	d
HASH_BLOOM_BYTELEN	structures/uthash.h	150;"	d
HASH_BLOOM_FREE	structures/uthash.h	131;"	d
HASH_BLOOM_FREE	structures/uthash.h	147;"	d
HASH_BLOOM_MAKE	structures/uthash.h	122;"	d
HASH_BLOOM_MAKE	structures/uthash.h	146;"	d
HASH_BLOOM_SIGNATURE	structures/uthash.h	920;"	d
HASH_BLOOM_TEST	structures/uthash.h	142;"	d
HASH_BLOOM_TEST	structures/uthash.h	149;"	d
HASH_CLEAR	structures/uthash.h	866;"	d
HASH_CNT	structures/uthash.h	896;"	d
HASH_COUNT	structures/uthash.h	895;"	d
HASH_DEL	structures/uthash.h	282;"	d
HASH_DELETE	structures/uthash.h	227;"	d
HASH_DEL_IN_BKT	structures/uthash.h	642;"	d
HASH_EMIT_KEY	structures/uthash.h	349;"	d
HASH_EMIT_KEY	structures/uthash.h	356;"	d
HASH_EXPAND_BUCKETS	structures/uthash.h	683;"	d
HASH_FCN	structures/uthash.h	361;"	d
HASH_FCN	structures/uthash.h	363;"	d
HASH_FIND	structures/uthash.h	106;"	d
HASH_FIND_INT	structures/uthash.h	270;"	d
HASH_FIND_IN_BKT	structures/uthash.h	614;"	d
HASH_FIND_PTR	structures/uthash.h	276;"	d
HASH_FIND_STR	structures/uthash.h	264;"	d
HASH_FNV	structures/uthash.h	392;"	d
HASH_FSCK	structures/uthash.h	290;"	d
HASH_FSCK	structures/uthash.h	342;"	d
HASH_INITIAL_NUM_BUCKETS	structures/uthash.h	99;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	structures/uthash.h	100;"	d
HASH_ITER	structures/uthash.h	885;"	d
HASH_ITER	structures/uthash.h	889;"	d
HASH_JEN	structures/uthash.h	433;"	d
HASH_JEN_MIX	structures/uthash.h	420;"	d
HASH_KEYCMP	structures/uthash.h	611;"	d
HASH_MAKE_TABLE	structures/uthash.h	153;"	d
HASH_MUR	structures/uthash.h	571;"	d
HASH_OAT	structures/uthash.h	404;"	d
HASH_OOPS	structures/uthash.h	289;"	d
HASH_OVERHEAD	structures/uthash.h	877;"	d
HASH_REPLACE	structures/uthash.h	175;"	d
HASH_REPLACE_INT	structures/uthash.h	274;"	d
HASH_REPLACE_PTR	structures/uthash.h	280;"	d
HASH_REPLACE_STR	structures/uthash.h	268;"	d
HASH_SAX	structures/uthash.h	381;"	d
HASH_SELECT	structures/uthash.h	828;"	d
HASH_SFH	structures/uthash.h	485;"	d
HASH_SIGNATURE	structures/uthash.h	919;"	d
HASH_SORT	structures/uthash.h	735;"	d
HASH_SRT	structures/uthash.h	736;"	d
HASH_TO_BKT	structures/uthash.h	210;"	d
ITEM	structures/simple_hashtable.c	/^} ITEM;$/;"	t	typeref:struct:item	file:
ITEM	structures/simple_hashtable.h	/^typedef struct item ITEM;$/;"	t	typeref:struct:item
Instruction	gerador.y	/^Instruction : Atribution ';' $/;"	l
Instruction	gramatica3.y	/^Instruction : Atribution ';' $/;"	l
InstructionList	gramatica3.y	/^InstructionList : Instruction$/;"	l
InstructionsList	gerador.y	/^InstructionsList : Instruction$/;"	l
MUR_FMIX	structures/uthash.h	562;"	d
MUR_GETBLOCK	structures/uthash.h	540;"	d
MUR_GETBLOCK	structures/uthash.h	556;"	d
MUR_ONE_THREE	structures/uthash.h	550;"	d
MUR_ONE_THREE	structures/uthash.h	554;"	d
MUR_PLUS0_ALIGNED	structures/uthash.h	542;"	d
MUR_PLUS1_ALIGNED	structures/uthash.h	543;"	d
MUR_PLUS2_ALIGNED	structures/uthash.h	544;"	d
MUR_PLUS3_ALIGNED	structures/uthash.h	545;"	d
MUR_ROTL32	structures/uthash.h	561;"	d
MUR_THREE_ONE	structures/uthash.h	548;"	d
MUR_THREE_ONE	structures/uthash.h	552;"	d
MUR_TWO_TWO	structures/uthash.h	549;"	d
MUR_TWO_TWO	structures/uthash.h	553;"	d
NO_DECLTYPE	structures/uthash.h	39;"	d
NO_DECLTYPE	structures/uthash.h	43;"	d
Notas	tp2.y	/^Notas : nota 			      {conta = 1; soma = $1;}$/;"	l
Program	gerador.y	/^Program : Declarations Body $/;"	l
Program	gramatica3.y	/^Program : Declarations Body ;$/;"	l
Term	gerador.y	/^Term : id$/;"	l
Term	gramatica3.y	/^Term  : id$/;"	l
Turma	tp2.y	/^Turma : TURMA nome ';' Alunos {printf("MÃ©dia da Turma %s: %.1f\\n", $2,($4\/total));}$/;"	l
UTHASH_H	structures/uthash.h	25;"	d
UTHASH_VERSION	structures/uthash.h	79;"	d
UT_hash_bucket	structures/uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	structures/uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_bucket::count	structures/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket	access:public
UT_hash_bucket::expand_mult	structures/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket	access:public
UT_hash_bucket::hh_head	structures/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle	access:public
UT_hash_handle	structures/uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	structures/uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_handle::hashv	structures/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle	access:public
UT_hash_handle::hh_next	structures/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle	access:public
UT_hash_handle::hh_prev	structures/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle	access:public
UT_hash_handle::key	structures/uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle	access:public
UT_hash_handle::keylen	structures/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle	access:public
UT_hash_handle::next	structures/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle	access:public
UT_hash_handle::prev	structures/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle	access:public
UT_hash_handle::tbl	structures/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table	access:public
UT_hash_table	structures/uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	structures/uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
UT_hash_table::bloom_bv	structures/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::bloom_nbits	structures/uthash.h	/^   uint8_t bloom_nbits;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::bloom_sig	structures/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::buckets	structures/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::hho	structures/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::ideal_chain_maxlen	structures/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::ineff_expands	structures/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::log2_num_buckets	structures/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::noexpand	structures/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::nonideal_items	structures/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::num_buckets	structures/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::num_items	structures/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::signature	structures/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table	access:public
UT_hash_table::tail	structures/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle	access:public
Variable	gerador.y	/^Variable : id$/;"	l
Variable	gramatica3.y	/^Variable : id$/;"	l
WP	structures/uthash.h	546;"	d
add_autor	structures/hashtable.c	/^void add_autor ( char *nome_autor )$/;"	f	signature:( char *nome_autor )
add_autor	structures/hashtable.h	/^void add_autor(char *nome_autor);$/;"	p	signature:(char *nome_autor)
add_coautor	structures/hashtable.c	/^void add_coautor ( char *nome_autor, char *nome_autor2 )$/;"	f	signature:( char *nome_autor, char *nome_autor2 )
add_coautor	structures/hashtable.h	/^void add_coautor(char *nome_autor, char *nome_autor2);$/;"	p	signature:(char *nome_autor, char *nome_autor2)
add_key	structures/simple_hashtable.c	/^void add_key ( char *key )$/;"	f	signature:( char *key )
add_key	structures/simple_hashtable.h	/^void add_key(char *key);$/;"	p	signature:(char *key)
autores	structures/hashtable.c	/^AUTOR *autores = NULL;$/;"	v
bloom_bv	structures/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table	access:public
bloom_nbits	structures/uthash.h	/^   uint8_t bloom_nbits;$/;"	m	struct:UT_hash_table	access:public
bloom_sig	structures/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table	access:public
buckets	structures/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table	access:public
count	structures/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket	access:public
delete_all	structures/hashtable.c	/^void delete_all()$/;"	f
delete_all	structures/hashtable.h	/^void delete_all(void);$/;"	p	signature:(void)
delete_all	structures/simple_hashtable.c	/^void delete_all()$/;"	f
delete_all	structures/simple_hashtable.h	/^void delete_all(void);$/;"	p	signature:(void)
delete_autor	structures/hashtable.c	/^void delete_autor ( AUTOR *autor )$/;"	f	signature:( AUTOR *autor )
delete_autor	structures/hashtable.h	/^void delete_autor(AUTOR *autor);$/;"	p	signature:(AUTOR *autor)
delete_key	structures/simple_hashtable.c	/^void delete_key ( ITEM *key )$/;"	f	signature:( ITEM *key )
delete_key	structures/simple_hashtable.h	/^void delete_key(ITEM *key);$/;"	p	signature:(ITEM *key)
expand_mult	structures/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket	access:public
find_autor	structures/hashtable.c	/^AUTOR *find_autor ( char *nome_autor )$/;"	f	signature:( char *nome_autor )
find_autor	structures/hashtable.h	/^AUTOR *find_autor(char *nome_autor);$/;"	p	signature:(char *nome_autor)
find_key	structures/simple_hashtable.c	/^ITEM *find_key ( char *key )$/;"	f	signature:( char *key )
find_key	structures/simple_hashtable.h	/^ITEM *find_key(char *key);$/;"	p	signature:(char *key)
get16bits	structures/uthash.h	475;"	d
get16bits	structures/uthash.h	478;"	d
get16bits	structures/uthash.h	482;"	d
hashv	structures/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle	access:public
hh	structures/hashtable.c	/^    UT_hash_handle hh;$/;"	m	struct:item	file:	access:public
hh	structures/simple_hashtable.c	/^    UT_hash_handle hh;$/;"	m	struct:item	file:	access:public
hh_head	structures/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle	access:public
hh_next	structures/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle	access:public
hh_prev	structures/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle	access:public
hho	structures/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table	access:public
id	structures/hashtable.c	/^    int id;$/;"	m	struct:item	file:	access:public
ideal_chain_maxlen	structures/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table	access:public
ineff_expands	structures/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	access:public
item	structures/hashtable.c	/^typedef struct item$/;"	s	file:
item	structures/simple_hashtable.c	/^typedef struct item$/;"	s	file:
item::hh	structures/hashtable.c	/^    UT_hash_handle hh;$/;"	m	struct:item	file:	access:public
item::hh	structures/simple_hashtable.c	/^    UT_hash_handle hh;$/;"	m	struct:item	file:	access:public
item::id	structures/hashtable.c	/^    int id;$/;"	m	struct:item	file:	access:public
item::key	structures/simple_hashtable.c	/^    char *key;$/;"	m	struct:item	file:	access:public
item::nome_autor	structures/hashtable.c	/^    char *nome_autor;$/;"	m	struct:item	file:	access:public
item::sub	structures/hashtable.c	/^    struct item *sub;$/;"	m	struct:item	typeref:struct:item::item	file:	access:public
item::total_ocurrences	structures/simple_hashtable.c	/^{   int total_ocurrences;$/;"	m	struct:item	file:	access:public
items	structures/simple_hashtable.c	/^ITEM *items = NULL;$/;"	v
key	structures/simple_hashtable.c	/^    char *key;$/;"	m	struct:item	file:	access:public
key	structures/uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle	access:public
keylen	structures/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle	access:public
log2_num_buckets	structures/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	access:public
next	structures/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle	access:public
noexpand	structures/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table	access:public
nome_autor	structures/hashtable.c	/^    char *nome_autor;$/;"	m	struct:item	file:	access:public
nonideal_items	structures/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table	access:public
num_buckets	structures/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table	access:public
num_items	structures/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table	access:public
prev	structures/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle	access:public
print_autor	structures/hashtable.c	/^void print_autor ( char *nome_autor )$/;"	f	signature:( char *nome_autor )
print_autor	structures/hashtable.h	/^void print_autor(char *nome_autor);$/;"	p	signature:(char *nome_autor)
print_autores	structures/hashtable.c	/^void print_autores()$/;"	f
print_autores	structures/hashtable.h	/^void print_autores(void);$/;"	p	signature:(void)
print_item_by_key	structures/simple_hashtable.c	/^void print_item_by_key ( char *key )$/;"	f	signature:( char *key )
print_item_by_key	structures/simple_hashtable.h	/^void print_item_by_key(char *key);$/;"	p	signature:(char *key)
print_items	structures/simple_hashtable.c	/^void print_items ()$/;"	f
print_items	structures/simple_hashtable.h	/^void print_items(void);$/;"	p	signature:(void)
signature	structures/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table	access:public
sub	structures/hashtable.c	/^    struct item *sub;$/;"	m	struct:item	typeref:struct:item::item	file:	access:public
tail	structures/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle	access:public
tbl	structures/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table	access:public
total_items	structures/hashtable.c	/^int total_items(){$/;"	f
total_items	structures/hashtable.h	/^int total_items(void);$/;"	p	signature:(void)
total_items	structures/simple_hashtable.c	/^int total_items(){$/;"	f
total_items	structures/simple_hashtable.h	/^int total_items();$/;"	p	signature:()
total_ocurrences	structures/simple_hashtable.c	/^{   int total_ocurrences;$/;"	m	struct:item	file:	access:public
uint32_t	structures/uthash.h	/^typedef unsigned int uint32_t;$/;"	t
uint8_t	structures/uthash.h	/^typedef unsigned char uint8_t;$/;"	t
uthash_expand_fyi	structures/uthash.h	95;"	d
uthash_fatal	structures/uthash.h	82;"	d
uthash_free	structures/uthash.h	88;"	d
uthash_malloc	structures/uthash.h	85;"	d
uthash_noexpand_fyi	structures/uthash.h	92;"	d
